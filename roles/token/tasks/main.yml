- include_vars: _secrets.yml

- name: Request token from AUTH API
  uri:
    url: "{{ IAM_AUTH_URL }}/auth/tokens"
    method: POST
    body_format: raw
    follow_redirects: all
    status_code: 201
    return_content: yes 
    validate_certs: yes
    HEADER_Content-Type: "application/json"
    body: "{{ lookup('template', 'roles/token/templates/request.json.j2',convert_data=True)|to_json }}" 
  register: token

- set_fact: 
#    OS_USER_DOMAIN_ID: "{{ (token.content|from_json)['token']['user']['domain']['id'] }}"
    OS_USER_DOMAIN_ID: "{{ (token.content|from_json)|json_query('token.user.domain.id') }}"
    PROJECT_ID: "{{ (token.content|from_json)|json_query('token.project.id') }}"
    AUTH_URL_DNS: "{{ (token.content|from_json)|json_query('token.catalog[?type==`dns`].endpoints[].url|[0]') }}"
    AUTH_URL_ECS: "{{ (token.content|from_json)|json_query('token.catalog[?type==`compute`].endpoints[].url|[0]') }}"
    AUTH_URL_VPC: "{{ (token.content|from_json)|json_query('token.catalog[?type==`network`].endpoints[].url|[0]') }}"
    AUTH_URL_EVS: "{{ (token.content|from_json)|json_query('token.catalog[?type==`volume`].endpoints[].url|[0]') }}"
    AUTH_URL_EVSv2: "{{ (token.content|from_json)|json_query('token.catalog[?type==`volumev2`].endpoints[].url|[0]') }}"
    AUTH_URL_RTS: "{{ (token.content|from_json)|json_query('token.catalog[?type==`orchestration`].endpoints[].url|[0]') }}"
    AUTH_URL_IMS: "{{ (token.content|from_json)|json_query('token.catalog[?type==`image`].endpoints[].url|[0]') }}"

# - debug:
#     msg: "{{ token }}"
