---

- hosts: localhost
  gather_facts: no
  connection: local
  vars_files:
    - buildservice_var.yml
  vars:
    date: "{{ lookup('pipe', 'date +%Y%m%d') }}"
  tasks:
  - name: Download ubuntu image {{ distro }}
    get_url:
      url: "https://cloud-images.ubuntu.com/{{ distro}}/current/{{ distro }}-server-cloudimg-amd64-disk1.vmdk"
      dest: "./{{ distro }}-server-cloudimg-amd64-{{ date }}.vmdk"
      force: yes

- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    date: "{{ lookup('pipe', 'date +%Y%m%d') }}"
    distro: "xenial"
    bucket: "buildservice"
    ecs_name: "buildserver"
    object: "{{ distro }}-server-cloudimg-amd64-{{ date }}.vmdk"
  vars_files:
    - buildservice_var.yml
  roles:
    - role: s3_bucket_create
    - role: s3_upload

- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    date: "{{ lookup('pipe', 'date +%Y%m%d') }}"
    distro: "xenial"
    bucket: "buildservice"
    image_name: "{{ distro }}-server-cloudimg-amd64-{{ date }}"
    image_url: "{{ bucket }}:{{ distro }}-server-cloudimg-amd64-{{ date }}.vmdk"
    image_min_disk: 12
  roles:
    - role: token
    - role: image_create

  tasks: 
    - name: check image status
      uri:
        url: "{{ AUTH_URL_IMS }}/v2/cloudimages?name={{ image_name }}"
        method: GET
        return_content: yes
        validate_certs: yes
        HEADER_Content-Type: "application/json"
        HEADER_X-Auth-Token: "{{ token['x_subject_token'] }}"
      when: image_name is defined
      register: ims_result
      until: (ims_result.content|from_json)|json_query('images[].status|[0]') == 'active'
      retries: 50
      delay: 10

- name: Create VPC
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: vpc_create

- name: Create Subnet
  hosts: localhost
  gather_facts: no
  connection: local
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: subnet_create

- name: Create Secgroup
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: secgroup_create

- name: Create Secgrouprules
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: secgrouprule_helper

- name: Create Keypair
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: keypair_create

- name: Create EIP
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  roles:
    - role: token
    - role: lookup_name
    - role: eip_apply

- name: Create ECS
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  vars:
    date: "{{ lookup('pipe', 'date +%Y%m%d') }}"
    distro: "xenial"
    image_name: "{{ distro }}-server-cloudimg-amd64-{{ date }}"
  roles:
    - role: token
    - role: lookup_name
    - role: ecs_create
    - role: job

- name: Switch to ECS
  hosts: localhost
  gather_facts: no
  vars_files:
    - buildservice_var.yml
  tasks:
  - name: Wait for ssh
    local_action: wait_for
    args:
      port: 22
      host: "{{ public_ip_address }}"
      delay: 60

  - name: Doing things on ECS
    shell: apt-get -y install puppet-common; git clone https://github.com/dev-sec/puppet-os-hardening.git; sudo puppet apply --modulepath ./puppet-os-hardening -e "include os_hardening"
    remote_user: ubuntu
    delegate_to: "{{ public_ip_address }}"
