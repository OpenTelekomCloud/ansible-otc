# ini file for tenant configuration
# each block for each vm
# usage ecs:
#   ansible-playbook -i hosts tenant_create.yml -e "ecs_name=ansible-test01"
# usage dns (public zones):
#   ansible-playbook -i hosts dns_create.yml
# usage dns (internal usage, only in selected vpc):
#   ansible-playbook -i hosts dns_create.yml -e "vpc_name=ansible-vpc01"
# usage elb (listener, healthcheck, backendmembers)
#   ansible-playbook -i hosts tenant_create.yml -e "elb_name=ansible-elb01" -e "listener_name=ansible-listener01"
#
[DEFAULT]
image_name=Community_Ubuntu_16.04_TSI_latest
availability_zone=eu-de-01
vpc_name=ansible-vpc01
vpc_net=192.168.0.0/16
subnet_name=ansible-subnet01
subnet_net=192.168.0.0/24
subnet_gateway=192.168.0.1
subnet_dhcp_enable=true
subnet_primary_dns=8.8.8.8
subnet_secondary_dns=8.4.4.8
secgroup_name=ansible-secgroup02
secgroup_rule1=ingress;IPv4;tcp;22;22;0.0.0.0/0
ecs_volumetype=SATA
ecs_ram=2048
ecs_vcpus=2
ecs_adminkey=ansible-key
keypair_file=~/.ssh/id_rsa.pub
[dnszones]
# name; description; type (public/private); email-address; ttl (in sec)
zone1=cloud3.internal.;Core Zone public OTC services;private;cloud-operations@telekom.de;86400
# zone1=external.otc.telekomcloud.com.;Core Zone public OTC services;;cloud-operations@telekom.de;86400
# zone2=80.196.44.160.in-addr.arpa.;Reverse OTC Zone;;cloud-operations@telekom.de;300
[dnszonerecords]
# domain; description; name; type; ttl; value
zonerecord1=cloud3.internal.;;test1.cloud3.internal.;A;300;192.168.0.1
# zonerecord1=external.otc.telekomcloud.com.;;console.external.otc.telekomcloud.com.;A;300;160.44.204.87
# zonerecord2=80.196.44.160.in-addr.arpa.;Reverse OTC;80.196.44.160.in-addr.arpa.;PTR;300;console.otc.telekomcloud.com.
[ansible-elb01]
elb_type=External
elb_bandwidth=100
admin_state_up=true
elb_availability_zone=eu_de-01
elb_secgroup_name=ansible-secgroup02
secgroup_rule1=ingress;IPv4;tcp;22;22;0.0.0.0/0
secgroup_rule1=ingress;IPv4;tcp;80;80;0.0.0.0/0
elb_subnet_name=ansible-subnet01
[ansible-listener01]
# HTTP, HTTPS, TCP
listener_protocol=TCP
listener_port=22
listener_backend_protocol=TCP
listener_backend_port=22
# source,  roundrobin, leastconn
listener_lb_algorithm=source
#listener_certificate_name=ansible-cert
#listener_tcp_timeout=
#listener_cookie_timeout=
#listener_sticky_session_type=insert
#listener_session_sticky=
healthcheck_connect_port=22
healthcheck_interval=5
# HTTP, TCP
healthcheck_protocol=TCP
healthcheck_timeout=10
#healthcheck_uri="/"
unhealthy_threshold=3
backend_members=ansible-test01,ansible-test02
[ansible-test01]
secgroup_name=ansible-secgroup01
secgroup_rule1=ingress;IPv4;tcp;22;22;0.0.0.0/0
secgroup_rule2=ingress;IPv4;tcp;80;80;0.0.0.0/0
secgroup_rule3=egress;IPv4;tcp;80;80;0.0.0.0/0
secgroup_rule4=ingress;IPv4;icmp;;;0.0.0.0/0
ecs_ipaddress=192.168.0.101
ecs_publicip=160.44.194.98
eip_bandwidth_name=ansible-eip1
eip_bandwidth_size=100
[ansible-test02]
image_name=Community_Ubuntu_14.04_TSI_latest
ecs_volumetype=SATA
ecs_ram=2048
ecs_vcpus=4
ecs_ipaddress=192.168.0.102
[ansible-test03]
ecs_volumetype=SSD
ecs_ipaddress=192.168.0.103
# ecs_publicip=0.0.0.0
# eip_bandwidth_name=ansible-eip1
# eip_bandwidth_size=100
[console]
image_name=Community_Ubuntu_16.04_TSI_latest
ecs_volumetype=SATA
ecs_ram=2048
ecs_vcpus=2
vpc_name=cloudcamp-vpc01
secgroup_name=cloudcamp-secgroup01
secgroup_rule1=ingress;IPv4;tcp;22;22;0.0.0.0/0
secgroup_rule2=ingress;IPv4;tcp;80;80;0.0.0.0/0
secgroup_rule3=ingress;IPv4;tcp;443;443;0.0.0.0/0
secgroup_rule4=egress;IPv4;tcp;22;22;0.0.0.0/0
secgroup_rule5=egress;IPv4;tcp;80;80;0.0.0.0/0
secgroup_rule6=egress;IPv4;tcp;443;443;0.0.0.0/0
secgroup_rule7=ingress;IPv4;icmp;;;0.0.0.0/0
vpc_net=192.168.0.0/16
subnet_name=cloudcamp-subnet01
subnet_net=192.168.0.0/24
subnet_gateway=192.168.0.1
subnet_dhcp_enable=true
subnet_primary_dns=8.8.8.8
subnet_secondary_dns=8.4.4.8
availability_zone=eu-de-01
ecs_ipaddress=192.168.0.87
ecs_publicip=160.44.204.87
eip_bandwidth_name=cloudcamp-eip1
eip_bandwidth_size=100
ecs_adminkey=eumel-key
keypair_file=~/.ssh/id_rsa.pub
